---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/races/{race_id}/laps":
    get:
      summary: Lists all laps for a race
      tags:
      - Laps
      security:
      - bearerAuth: []
      parameters:
      - name: race_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: laps listed
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        lap_number:
                          type: integer
                        lap_time_seconds:
                          type: number
                        position:
                          type: integer
                      required:
                      - id
                      - lap_number
                      - lap_time_seconds
                      - position
    post:
      summary: Creates a lap for a race
      tags:
      - Laps
      security:
      - bearerAuth: []
      parameters:
      - name: race_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: lap created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lap:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    lap_number:
                      type: integer
                    lap_time_seconds:
                      type: number
                    position:
                      type: integer
                  required:
                  - user_id
                  - lap_number
                  - lap_time_seconds
                  - position
              required:
              - lap
  "/api/laps/{id}":
    get:
      summary: Retrieves a lap
      tags:
      - Laps
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: lap found
        '404':
          description: lap not found
    patch:
      summary: Updates a lap
      tags:
      - Laps
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: lap updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lap:
                  type: object
                  properties:
                    lap_time_seconds:
                      type: number
                  required:
                  - lap_time_seconds
    delete:
      summary: Deletes a lap
      tags:
      - Laps
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: lap deleted
  "/api/tracks/{track_id}/races":
    get:
      summary: Lista wyścigów dla toru
      tags:
      - Races
      security:
      - bearerAuth: []
      parameters:
      - name: track_id
        in: path
        description: ID toru
        required: true
        schema:
          type: string
      responses:
        '200':
          description: lista wyścigów znaleziona
        '404':
          description: tor nie znaleziony
    post:
      summary: Tworzy nowy wyścig
      tags:
      - Races
      security:
      - bearerAuth: []
      parameters:
      - name: track_id
        in: path
        description: ID toru
        required: true
        schema:
          type: string
      responses:
        '201':
          description: wyścig utworzony
        '422':
          description: błędne dane wejściowe
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
              required:
              - name
              - start_time
              - end_time
  "/api/races/{id}":
    get:
      summary: Pobiera pojedynczy wyścig
      tags:
      - Races
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID wyścigu
        required: true
        schema:
          type: string
      responses:
        '200':
          description: wyścig znaleziony
        '404':
          description: wyścig nie znaleziony
    put:
      summary: Aktualizuje wyścig
      tags:
      - Races
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID wyścigu
        required: true
        schema:
          type: string
      responses:
        '200':
          description: wyścig zaktualizowany
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
    delete:
      summary: Usuwa wyścig
      tags:
      - Races
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID wyścigu
        required: true
        schema:
          type: string
      responses:
        '204':
          description: wyścig usunięty
        '404':
          description: wyścig nie znaleziony
  "/api/login":
    post:
      summary: Log in a user
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: login successful
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - email
              - password
              properties:
                email:
                  type: string
                password:
                  type: string
  "/api/logout":
    delete:
      summary: Log out a user
      tags:
      - Sessions
      security:
      - bearerAuth: []
      responses:
        '200':
          description: logout successful
        '401':
          description: invalid token
  "/api/tracks":
    get:
      summary: List all tracks
      tags:
      - Tracks
      security:
      - bearerAuth: []
      responses:
        '200':
          description: tracks listed
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    location:
                      type: string
                    length_meters:
                      type: number
                    is_indoor:
                      type: boolean
    post:
      summary: Create a track
      tags:
      - Tracks
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: track created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                location:
                  type: string
                length_meters:
                  type: number
                is_indoor:
                  type: boolean
              required:
              - name
              - location
              - length_meters
              - is_indoor
  "/api/tracks/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Show a track
      security:
      - bearerAuth: []
      tags:
      - Tracks
      responses:
        '200':
          description: track found
        '404':
          description: track not found
    put:
      summary: Update a track
      tags:
      - Tracks
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: track updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                location:
                  type: string
                length_meters:
                  type: number
                is_indoor:
                  type: boolean
    delete:
      summary: Delete a track
      security:
      - bearerAuth: []
      tags:
      - Tracks
      responses:
        '204':
          description: track deleted
        '404':
          description: track not found
  "/api/users":
    get:
      summary: List all users
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: users listed
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    birthdate:
                      type: string
                      format: date
                    role_mask:
                      type: integer
    post:
      summary: Create a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - email
              - first_name
              - last_name
              - birthdate
              - password
              - password_confirmation
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                birthdate:
                  type: string
                  format: date
                password:
                  type: string
                password_confirmation:
                  type: string
                role_mask:
                  type: integer
  "/api/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Show user details
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: user found
        '404':
          description: user not found
    put:
      summary: Update a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: user updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                birthdate:
                  type: string
                  format: date
                password:
                  type: string
                password_confirmation:
                  type: string
                role_mask:
                  type: integer
    delete:
      summary: Delete a user
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '204':
          description: user deleted
        '404':
          description: user not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
